% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download_gb.R
\name{download_gb}
\alias{download_gb}
\title{Download GenBank files}
\usage{
download_gb(
  accns,
  assembly_dir = NULL,
  update_threshold = 30,
  verbose = getOption("verbose")
)
}
\arguments{
\item{accns}{data.frame; a data frame that contains genome ids
(e.g. GCA_009859665.2) and unit (e.g. MN692672.2) accessions.}

\item{assembly_dir}{character; the path to the download directory.}

\item{update_threshold}{numeric; reports accessed earlier than this value
(days) will be downloaded again and the existing versions will be
overwritten. Set below \code{0} to force download all reports.}

\item{verbose}{logical; print messages to screen?}
}
\value{
The function will download a GenBank file for each line of the
\code{accns} data frame.
}
\description{
Download GenBank files from NCBI.
}
\note{
This is the sixth and last step within the pipeline for downloading GenBank
files.

IMPORTANT! This function uses efetch in the background and requires
NCBI Entrez utilities to be available through the command line. On
Debian-like systems this requires the installation of the
\code{ncbi-entrez-direct} package. The package is available through the
package manager.
}
\examples{
\dontrun{
phages <- get_uid("Autographiviridae", db = "assembly")
report_url <- get_report_url(phages$ids[1:3], cache = FALSE, verbose = TRUE)
download_report(report_url, verbose = TRUE)
filenames <- dir(paste0(tempdir(), "/assembly_reports"))
filepaths <- paste0(tempdir(), "/assembly_reports/", filenames)
rpts <- lapply(filepaths, parse_report())
accns <- lapply(rpts, extract_accn())
accns <- dplyr::bind_rows(accns)
download_gb(accns, verbose = TRUE)
}
}
\seealso{
\code{get_genomeid},
\code{get_report_url()},
\code{download_report()},
\code{parse_report()},
\code{extract_accn()},
\code{download_gb()}


}
